splom(result)
alglist = c('lm','gbm')
model = caretList(price~.,data=data.sub,trControl=control,methodList = alglist)
result = resamples(model)
summary(result)
dotplot(result)
modelCor(result)
splom(result)
alglist = c('gaussprRadial','gbm')
model = caretList(price~.,data=data.sub,trControl=control,methodList = alglist)
install.packages('foreach')
install.packages('foreach')
install.packages("foreach")
install.packages('foreach')
install.packages('multicore')
install.packages('Rmpi')
install.packages('doParallel')
data = read.csv('analysisData.csv',stringsAsFactors = F)
#data = read.csv('scoringData.csv',stringsAsFactors = F)
names(data)
num.NA = sort(sapply(data, function(x) { sum(is.na(x))} ))
remain.col = names(num.NA[which(num.NA<0.8*dim(data)[1])])
data.sub = data[,remain.col]
sort(sapply(data.sub, function(x) { sum(is.na(x))} ))
#data.sub$security_deposit[which(is.na(data.sub$security_deposit))] = 0 #median(data.sub$security_deposit,na.rm=T)
data.sub$cleaning_fee[which(is.na(data.sub$cleaning_fee))] = median(data.sub$cleaning_fee,na.rm=T)
#data.sub$reviews_per_month[which(is.na(data.sub$reviews_per_month))] = median(data.sub$reviews_per_month,na.rm=T)
data.sub$beds[which(is.na(data.sub$beds))] = median(data.sub$beds,na.rm=T)
data.sub$cancellation_policy[which(data.sub$cancellation_policy=='flexible')] = 1
data.sub$cancellation_policy[which(data.sub$cancellation_policy=='moderate')] = 2
data.sub$cancellation_policy[which(data.sub$cancellation_policy=='strict')] = 3
data.sub$cancellation_policy[which(data.sub$cancellation_policy=='super_strict_30')] = 4
data.sub$cancellation_policy[which(data.sub$cancellation_policy=='super_strict_60')] = 4
data.sub$cancellation_policy = as.numeric(data.sub$cancellation_policy)
data.sub$host_response_time[which(data.sub$host_response_time=='a few days or more')] = 1
data.sub$host_response_time[which(data.sub$host_response_time=='N/A')] = 0
data.sub$host_response_time[which(data.sub$host_response_time=='within a day')] = 3
data.sub$host_response_time[which(data.sub$host_response_time=='within a few hours')] = 6
data.sub$host_response_time[which(data.sub$host_response_time=='within an hour')] = 10
data.sub$host_response_time = as.numeric(data.sub$host_response_time)
data.sub$host_is_superhost[which(data.sub$host_is_superhost=='f')] = 0
data.sub$host_is_superhost[which(data.sub$host_is_superhost=='t')] = 1
data.sub$host_is_superhost = as.numeric(data.sub$host_is_superhost)
data.sub$is_location_exact[which(data.sub$is_location_exact=='f')] = 0
data.sub$is_location_exact[which(data.sub$is_location_exact=='t')] = 1
data.sub$is_location_exact = as.numeric(data.sub$is_location_exact)
data.sub$instant_bookable[which(data.sub$instant_bookable=='f')] = 0
data.sub$instant_bookable[which(data.sub$instant_bookable=='t')] = 1
data.sub$instant_bookable = as.numeric(data.sub$instant_bookable)
data.sub$property_type[which(data.sub$property_type=='Apartment')] = 1
data.sub$property_type[which(data.sub$property_type!=1)] = 0
data.sub$property_type = as.numeric(data.sub$property_type)
data.sub$is_business_travel_ready[which(data.sub$is_business_travel_ready=='t')] = 1
data.sub$is_business_travel_ready[which(data.sub$is_business_travel_ready=='f')] = 0
data.sub$is_business_travel_ready = as.numeric(data.sub$is_business_travel_ready)
data.sub$latitude = (data.sub$latitude - 40) * 1000
data.sub$longitude = (data.sub$longitude + 74.3) * 1000
data.sub$transit[which(data.sub$transit=='')] = 0
data.sub$transit[which(data.sub$transit!=0)] = 1
data.sub$transit = as.numeric(data.sub$transit)
data.sub$access[which(data.sub$access=='')] = 0
data.sub$access[which(data.sub$access!=0)] = 1
data.sub$access = as.numeric(data.sub$access)
#one hot
data.sub$neighbourhood_Bronx=0
data.sub$neighbourhood_Bronx[which(data.sub$neighbourhood_group_cleansed=='Bronx')] = 1
data.sub$neighbourhood_Brooklyn=0
data.sub$neighbourhood_Brooklyn[which(data.sub$neighbourhood_group_cleansed=='Brooklyn')] = 1
data.sub$neighbourhood_Manhattan=0
data.sub$neighbourhood_Manhattan[which(data.sub$neighbourhood_group_cleansed=='Manhattan')] = 1
data.sub$neighbourhood_Queens=0
data.sub$neighbourhood_Queens[which(data.sub$neighbourhood_group_cleansed=='Queens')] = 1
data.sub$neighbourhood_Staten=0
data.sub$neighbourhood_Staten[which(data.sub$neighbourhood_group_cleansed=='Staten Island')] = 1
data.sub$bed_airbed = 0
data.sub$bed_airbed[which(data.sub$bed_type=='Airbed')] = 1
data.sub$bed_couch = 0
data.sub$bed_couch[which(data.sub$bed_type=='Couch')] = 1
data.sub$bed_futon = 0
data.sub$bed_futon[which(data.sub$bed_type=='Futon')] = 1
data.sub$bed_sofa = 0
data.sub$bed_sofa[which(data.sub$bed_type=='Pull-out Sofa')] = 1
data.sub$bed_real = 0
data.sub$bed_real[which(data.sub$bed_type=='Real Bed')] = 1
data.sub$room_apt=0
data.sub$room_apt[which(data.sub$room_type=='Entire home/apt')] = 1
data.sub$room_private=0
data.sub$room_private[which(data.sub$room_type=='Private room')] = 1
data.sub$room_shared=0
data.sub$room_shared[which(data.sub$room_type=='Shared room')] = 1
#amenity
sum((grepl("Cat", data.sub$amenities)==T))/nrow(data.sub)
data.sub$wifi = 0
data.sub$wifi[which((grepl("Wifi", data.sub$amenities)==T) | (grepl("Internet", data.sub$amenities)==T))] = 1
data.sub$heat = 0
data.sub$heat[which(grepl("Heating", data.sub$amenities)==T)] = 1
data.sub$air = 0
data.sub$air[which(grepl("Air conditioning", data.sub$amenities)==T)] = 1
data.sub$kitcken = 0
data.sub$kitcken[which(grepl("Kitchen", data.sub$amenities)==T)] = 1
data.sub$shampoo = 0
data.sub$shampoo[which(grepl("Shampoo", data.sub$amenities)==T)] = 1
data.sub$essential = 0
data.sub$essential[which(grepl("Essentials", data.sub$amenities)==T)] = 1
data.sub$elevator = 0
data.sub$elevator[which(grepl("Elevator", data.sub$amenities)==T)] = 1
data.sub$tv = 0
data.sub$tv[which((grepl("TV", data.sub$amenities)==T) | (grepl("Cable TV", data.sub$amenities)==T))] = 1
data.sub$gym = 0
data.sub$gym[which(grepl("Gym", data.sub$amenities)==T)] = 1
data.sub$washer = 0
data.sub$washer[which(grepl("Washer", data.sub$amenities)==T)] = 1
data.sub$dryer = 0
data.sub$dryer[which(grepl("Dryer", data.sub$amenities)==T)] = 1
data.sub$fridge = 0
data.sub$fridge[which(grepl("Refrigerator", data.sub$amenities)==T)] = 1
data.sub$self_check = 0
data.sub$self_check[which(grepl("Self check-in", data.sub$amenities)==T)] = 1
data.sub$hair = 0
data.sub$hair[which(grepl("Hair dryer", data.sub$amenities)==T)] = 1
data.sub$smart = 0
data.sub$smart[which(grepl("Smart lock", data.sub$amenities)==T)] = 1
data.sub$aid = 0
data.sub$aid[which(grepl("First aid kit", data.sub$amenities)==T)] = 1
data.sub$hanger = 0
data.sub$hanger[which(grepl("Hangers", data.sub$amenities)==T)] = 1
data.sub$co = 0
data.sub$co[which(grepl("Carbon monoxide detector", data.sub$amenities)==T)] = 1
data.sub = data.sub[,c('price','cleaning_fee','beds','host_response_time',
'host_is_superhost','neighbourhood_Bronx','neighbourhood_Brooklyn',
'neighbourhood_Manhattan','neighbourhood_Queens','neighbourhood_Staten',
'latitude','longitude','room_apt','room_private','room_shared',
'accommodates','bathrooms','bedrooms','guests_included','transit','access',
'minimum_nights','calculated_host_listings_count','property_type',
'review_scores_rating','reviews_per_month','is_business_travel_ready',
'review_scores_cleanliness','review_scores_checkin','is_location_exact',
'review_scores_location','review_scores_value','cancellation_policy',
'availability_30','availability_60','availability_90','availability_365','bed_airbed',
'bed_couch','bed_futon','bed_sofa','bed_real','instant_bookable',
'wifi','heat','air','kitcken','shampoo','essential','tv','gym',
'washer','dryer','fridge','self_check','hair','smart','aid','hanger','co')]
library(doParallel)
cl = makePSOCKcluster(8)
registerDoParallel(cl)
library(caretEnsemble)
library(caret)
control = trainControl(method="repeatedcv",number=5,repeats=3,savePred=T)
alglist = c('gaussprRadial','gbm')
set.seed(1)
model = train(price~.,data=data.sub,trControl=control,method = 'gaussprRadial',verbose=F)
stopCluster(cl)
data = read.csv('analysisData.csv',stringsAsFactors = F)
#data = read.csv('scoringData.csv',stringsAsFactors = F)
names(data)
num.NA = sort(sapply(data, function(x) { sum(is.na(x))} ))
remain.col = names(num.NA[which(num.NA<0.8*dim(data)[1])])
data.sub = data[,remain.col]
sort(sapply(data.sub, function(x) { sum(is.na(x))} ))
#data.sub$security_deposit[which(is.na(data.sub$security_deposit))] = 0 #median(data.sub$security_deposit,na.rm=T)
data.sub$cleaning_fee[which(is.na(data.sub$cleaning_fee))] = median(data.sub$cleaning_fee,na.rm=T)
#data.sub$reviews_per_month[which(is.na(data.sub$reviews_per_month))] = median(data.sub$reviews_per_month,na.rm=T)
data.sub$beds[which(is.na(data.sub$beds))] = median(data.sub$beds,na.rm=T)
data.sub$cancellation_policy[which(data.sub$cancellation_policy=='flexible')] = 1
data.sub$cancellation_policy[which(data.sub$cancellation_policy=='moderate')] = 2
data.sub$cancellation_policy[which(data.sub$cancellation_policy=='strict')] = 3
data.sub$cancellation_policy[which(data.sub$cancellation_policy=='super_strict_30')] = 4
data.sub$cancellation_policy[which(data.sub$cancellation_policy=='super_strict_60')] = 4
data.sub$cancellation_policy = as.numeric(data.sub$cancellation_policy)
data.sub$host_response_time[which(data.sub$host_response_time=='a few days or more')] = 1
data.sub$host_response_time[which(data.sub$host_response_time=='N/A')] = 0
data.sub$host_response_time[which(data.sub$host_response_time=='within a day')] = 3
data.sub$host_response_time[which(data.sub$host_response_time=='within a few hours')] = 6
data.sub$host_response_time[which(data.sub$host_response_time=='within an hour')] = 10
data.sub$host_response_time = as.numeric(data.sub$host_response_time)
data.sub$host_is_superhost[which(data.sub$host_is_superhost=='f')] = 0
data.sub$host_is_superhost[which(data.sub$host_is_superhost=='t')] = 1
data.sub$host_is_superhost = as.numeric(data.sub$host_is_superhost)
data.sub$is_location_exact[which(data.sub$is_location_exact=='f')] = 0
data.sub$is_location_exact[which(data.sub$is_location_exact=='t')] = 1
data.sub$is_location_exact = as.numeric(data.sub$is_location_exact)
data.sub$instant_bookable[which(data.sub$instant_bookable=='f')] = 0
data.sub$instant_bookable[which(data.sub$instant_bookable=='t')] = 1
data.sub$instant_bookable = as.numeric(data.sub$instant_bookable)
data.sub$property_type[which(data.sub$property_type=='Apartment')] = 1
data.sub$property_type[which(data.sub$property_type!=1)] = 0
data.sub$property_type = as.numeric(data.sub$property_type)
data.sub$is_business_travel_ready[which(data.sub$is_business_travel_ready=='t')] = 1
data.sub$is_business_travel_ready[which(data.sub$is_business_travel_ready=='f')] = 0
data.sub$is_business_travel_ready = as.numeric(data.sub$is_business_travel_ready)
data.sub$latitude = (data.sub$latitude - 40) * 1000
data.sub$longitude = (data.sub$longitude + 74.3) * 1000
data.sub$transit[which(data.sub$transit=='')] = 0
data.sub$transit[which(data.sub$transit!=0)] = 1
data.sub$transit = as.numeric(data.sub$transit)
data.sub$access[which(data.sub$access=='')] = 0
data.sub$access[which(data.sub$access!=0)] = 1
data.sub$access = as.numeric(data.sub$access)
#one hot
data.sub$neighbourhood_Bronx=0
data.sub$neighbourhood_Bronx[which(data.sub$neighbourhood_group_cleansed=='Bronx')] = 1
data.sub$neighbourhood_Brooklyn=0
data.sub$neighbourhood_Brooklyn[which(data.sub$neighbourhood_group_cleansed=='Brooklyn')] = 1
data.sub$neighbourhood_Manhattan=0
data.sub$neighbourhood_Manhattan[which(data.sub$neighbourhood_group_cleansed=='Manhattan')] = 1
data.sub$neighbourhood_Queens=0
data.sub$neighbourhood_Queens[which(data.sub$neighbourhood_group_cleansed=='Queens')] = 1
data.sub$neighbourhood_Staten=0
data.sub$neighbourhood_Staten[which(data.sub$neighbourhood_group_cleansed=='Staten Island')] = 1
data.sub$bed_airbed = 0
data.sub$bed_airbed[which(data.sub$bed_type=='Airbed')] = 1
data.sub$bed_couch = 0
data.sub$bed_couch[which(data.sub$bed_type=='Couch')] = 1
data.sub$bed_futon = 0
data.sub$bed_futon[which(data.sub$bed_type=='Futon')] = 1
data.sub$bed_sofa = 0
data.sub$bed_sofa[which(data.sub$bed_type=='Pull-out Sofa')] = 1
data.sub$bed_real = 0
data.sub$bed_real[which(data.sub$bed_type=='Real Bed')] = 1
data.sub$room_apt=0
data.sub$room_apt[which(data.sub$room_type=='Entire home/apt')] = 1
data.sub$room_private=0
data.sub$room_private[which(data.sub$room_type=='Private room')] = 1
data.sub$room_shared=0
data.sub$room_shared[which(data.sub$room_type=='Shared room')] = 1
#amenity
sum((grepl("Cat", data.sub$amenities)==T))/nrow(data.sub)
data.sub$wifi = 0
data.sub$wifi[which((grepl("Wifi", data.sub$amenities)==T) | (grepl("Internet", data.sub$amenities)==T))] = 1
data.sub$heat = 0
data.sub$heat[which(grepl("Heating", data.sub$amenities)==T)] = 1
data.sub$air = 0
data.sub$air[which(grepl("Air conditioning", data.sub$amenities)==T)] = 1
data.sub$kitcken = 0
data.sub$kitcken[which(grepl("Kitchen", data.sub$amenities)==T)] = 1
data.sub$shampoo = 0
data.sub$shampoo[which(grepl("Shampoo", data.sub$amenities)==T)] = 1
data.sub$essential = 0
data.sub$essential[which(grepl("Essentials", data.sub$amenities)==T)] = 1
data.sub$elevator = 0
data.sub$elevator[which(grepl("Elevator", data.sub$amenities)==T)] = 1
data.sub$tv = 0
data.sub$tv[which((grepl("TV", data.sub$amenities)==T) | (grepl("Cable TV", data.sub$amenities)==T))] = 1
data.sub$gym = 0
data.sub$gym[which(grepl("Gym", data.sub$amenities)==T)] = 1
data.sub$washer = 0
data.sub$washer[which(grepl("Washer", data.sub$amenities)==T)] = 1
data.sub$dryer = 0
data.sub$dryer[which(grepl("Dryer", data.sub$amenities)==T)] = 1
data.sub$fridge = 0
data.sub$fridge[which(grepl("Refrigerator", data.sub$amenities)==T)] = 1
data.sub$self_check = 0
data.sub$self_check[which(grepl("Self check-in", data.sub$amenities)==T)] = 1
data.sub$hair = 0
data.sub$hair[which(grepl("Hair dryer", data.sub$amenities)==T)] = 1
data.sub$smart = 0
data.sub$smart[which(grepl("Smart lock", data.sub$amenities)==T)] = 1
data.sub$aid = 0
data.sub$aid[which(grepl("First aid kit", data.sub$amenities)==T)] = 1
data.sub$hanger = 0
data.sub$hanger[which(grepl("Hangers", data.sub$amenities)==T)] = 1
data.sub$co = 0
data.sub$co[which(grepl("Carbon monoxide detector", data.sub$amenities)==T)] = 1
data.sub = data.sub[,c('price','cleaning_fee','beds','host_response_time',
'host_is_superhost','neighbourhood_Bronx','neighbourhood_Brooklyn',
'neighbourhood_Manhattan','neighbourhood_Queens','neighbourhood_Staten',
'latitude','longitude','room_apt','room_private','room_shared',
'accommodates','bathrooms','bedrooms','guests_included','transit','access',
'minimum_nights','calculated_host_listings_count','property_type',
'review_scores_rating','reviews_per_month','is_business_travel_ready',
'review_scores_cleanliness','review_scores_checkin','is_location_exact',
'review_scores_location','review_scores_value','cancellation_policy',
'availability_30','availability_60','availability_90','availability_365','bed_airbed',
'bed_couch','bed_futon','bed_sofa','bed_real','instant_bookable',
'wifi','heat','air','kitcken','shampoo','essential','tv','gym',
'washer','dryer','fridge','self_check','hair','smart','aid','hanger','co')]
library(mlbench)
library(lattice)
library(caret)
theme = trellis.par.get()
theme$plot.symbol$col = rgb(.2,.2,.2,.4)
theme$plot.symble$pch=16
theme$plot.line$col=rgb(1,0,0,.7)
theme$plot.line$lwd=2
trellis.par.set(theme)
featurePlot(x = data.sub[,c(57,58)],y = data.sub[,1],plot='scatter',type=c('p','smooth'),span=.5,layout=c(1,3))
featurePlot(x = data.sub[,c(57,58)],y = data.sub[,1],plot='scatter',layout=c(1,3))
data.sub = data.sub[,c('price','cleaning_fee','beds','host_response_time',
'host_is_superhost','neighbourhood_Bronx','neighbourhood_Brooklyn',
'neighbourhood_Manhattan','neighbourhood_Queens','neighbourhood_Staten',
'latitude','longitude','room_apt','room_private','room_shared',
'accommodates','bathrooms','bedrooms','guests_included','transit','access',
'minimum_nights','calculated_host_listings_count','property_type',
'review_scores_rating','reviews_per_month','is_business_travel_ready',
'review_scores_cleanliness','review_scores_checkin','is_location_exact',
'review_scores_location','review_scores_value','cancellation_policy',
'availability_30','availability_60','availability_90','availability_365','bed_airbed',
'bed_couch','bed_futon','bed_sofa','bed_real','instant_bookable')]
#'wifi','heat','air','kitcken','shampoo','essential','tv','gym',
#'washer','dryer','fridge','self_check','hair','smart','aid','hanger','co')]
write.csv(data.sub, 'cleaned_data.csv',row.names = F)
data.sub = data.sub[,c('price','cleaning_fee','beds','host_response_time',
'host_is_superhost','neighbourhood_Bronx','neighbourhood_Brooklyn',
'neighbourhood_Manhattan','neighbourhood_Queens','neighbourhood_Staten',
'latitude','longitude','room_apt','room_private','room_shared',
'accommodates','bathrooms','bedrooms','guests_included','transit','access',
'minimum_nights','calculated_host_listings_count','property_type',
'review_scores_rating','reviews_per_month','is_business_travel_ready',
'review_scores_cleanliness','review_scores_checkin','is_location_exact',
'review_scores_location','review_scores_value','cancellation_policy',
'availability_30','availability_60','availability_90','availability_365','bed_airbed',
'bed_couch','bed_futon','bed_sofa','bed_real','instant_bookable',
'wifi','heat','air','kitcken','shampoo','essential','tv','gym')]
data = read.csv('analysisData.csv',stringsAsFactors = F)
#data = read.csv('scoringData.csv',stringsAsFactors = F)
names(data)
num.NA = sort(sapply(data, function(x) { sum(is.na(x))} ))
remain.col = names(num.NA[which(num.NA<0.8*dim(data)[1])])
data.sub = data[,remain.col]
sort(sapply(data.sub, function(x) { sum(is.na(x))} ))
#data.sub$security_deposit[which(is.na(data.sub$security_deposit))] = 0 #median(data.sub$security_deposit,na.rm=T)
data.sub$cleaning_fee[which(is.na(data.sub$cleaning_fee))] = median(data.sub$cleaning_fee,na.rm=T)
#data.sub$reviews_per_month[which(is.na(data.sub$reviews_per_month))] = median(data.sub$reviews_per_month,na.rm=T)
data.sub$beds[which(is.na(data.sub$beds))] = median(data.sub$beds,na.rm=T)
data.sub$cancellation_policy[which(data.sub$cancellation_policy=='flexible')] = 1
data.sub$cancellation_policy[which(data.sub$cancellation_policy=='moderate')] = 2
data.sub$cancellation_policy[which(data.sub$cancellation_policy=='strict')] = 3
data.sub$cancellation_policy[which(data.sub$cancellation_policy=='super_strict_30')] = 4
data.sub$cancellation_policy[which(data.sub$cancellation_policy=='super_strict_60')] = 4
data.sub$cancellation_policy = as.numeric(data.sub$cancellation_policy)
data.sub$host_response_time[which(data.sub$host_response_time=='a few days or more')] = 1
data.sub$host_response_time[which(data.sub$host_response_time=='N/A')] = 0
data.sub$host_response_time[which(data.sub$host_response_time=='within a day')] = 3
data.sub$host_response_time[which(data.sub$host_response_time=='within a few hours')] = 6
data.sub$host_response_time[which(data.sub$host_response_time=='within an hour')] = 10
data.sub$host_response_time = as.numeric(data.sub$host_response_time)
data.sub$host_is_superhost[which(data.sub$host_is_superhost=='f')] = 0
data.sub$host_is_superhost[which(data.sub$host_is_superhost=='t')] = 1
data.sub$host_is_superhost = as.numeric(data.sub$host_is_superhost)
data.sub$is_location_exact[which(data.sub$is_location_exact=='f')] = 0
data.sub$is_location_exact[which(data.sub$is_location_exact=='t')] = 1
data.sub$is_location_exact = as.numeric(data.sub$is_location_exact)
data.sub$instant_bookable[which(data.sub$instant_bookable=='f')] = 0
data.sub$instant_bookable[which(data.sub$instant_bookable=='t')] = 1
data.sub$instant_bookable = as.numeric(data.sub$instant_bookable)
data.sub$property_type[which(data.sub$property_type=='Apartment')] = 1
data.sub$property_type[which(data.sub$property_type!=1)] = 0
data.sub$property_type = as.numeric(data.sub$property_type)
data.sub$is_business_travel_ready[which(data.sub$is_business_travel_ready=='t')] = 1
data.sub$is_business_travel_ready[which(data.sub$is_business_travel_ready=='f')] = 0
data.sub$is_business_travel_ready = as.numeric(data.sub$is_business_travel_ready)
data.sub$latitude = (data.sub$latitude - 40) * 1000
data.sub$longitude = (data.sub$longitude + 74.3) * 1000
data.sub$transit[which(data.sub$transit=='')] = 0
data.sub$transit[which(data.sub$transit!=0)] = 1
data.sub$transit = as.numeric(data.sub$transit)
data.sub$access[which(data.sub$access=='')] = 0
data.sub$access[which(data.sub$access!=0)] = 1
data.sub$access = as.numeric(data.sub$access)
#one hot
data.sub$neighbourhood_Bronx=0
data.sub$neighbourhood_Bronx[which(data.sub$neighbourhood_group_cleansed=='Bronx')] = 1
data.sub$neighbourhood_Brooklyn=0
data.sub$neighbourhood_Brooklyn[which(data.sub$neighbourhood_group_cleansed=='Brooklyn')] = 1
data.sub$neighbourhood_Manhattan=0
data.sub$neighbourhood_Manhattan[which(data.sub$neighbourhood_group_cleansed=='Manhattan')] = 1
data.sub$neighbourhood_Queens=0
data.sub$neighbourhood_Queens[which(data.sub$neighbourhood_group_cleansed=='Queens')] = 1
data.sub$neighbourhood_Staten=0
data.sub$neighbourhood_Staten[which(data.sub$neighbourhood_group_cleansed=='Staten Island')] = 1
data.sub$bed_airbed = 0
data.sub$bed_airbed[which(data.sub$bed_type=='Airbed')] = 1
data.sub$bed_couch = 0
data.sub$bed_couch[which(data.sub$bed_type=='Couch')] = 1
data.sub$bed_futon = 0
data.sub$bed_futon[which(data.sub$bed_type=='Futon')] = 1
data.sub$bed_sofa = 0
data.sub$bed_sofa[which(data.sub$bed_type=='Pull-out Sofa')] = 1
data.sub$bed_real = 0
data.sub$bed_real[which(data.sub$bed_type=='Real Bed')] = 1
data.sub$room_apt=0
data.sub$room_apt[which(data.sub$room_type=='Entire home/apt')] = 1
data.sub$room_private=0
data.sub$room_private[which(data.sub$room_type=='Private room')] = 1
data.sub$room_shared=0
data.sub$room_shared[which(data.sub$room_type=='Shared room')] = 1
#amenity
sum((grepl("Cat", data.sub$amenities)==T))/nrow(data.sub)
data.sub$wifi = 0
data.sub$wifi[which((grepl("Wifi", data.sub$amenities)==T) | (grepl("Internet", data.sub$amenities)==T))] = 1
data.sub$heat = 0
data.sub$heat[which(grepl("Heating", data.sub$amenities)==T)] = 1
data.sub$air = 0
data.sub$air[which(grepl("Air conditioning", data.sub$amenities)==T)] = 1
data.sub$kitcken = 0
data.sub$kitcken[which(grepl("Kitchen", data.sub$amenities)==T)] = 1
data.sub$shampoo = 0
data.sub$shampoo[which(grepl("Shampoo", data.sub$amenities)==T)] = 1
data.sub$essential = 0
data.sub$essential[which(grepl("Essentials", data.sub$amenities)==T)] = 1
data.sub$elevator = 0
data.sub$elevator[which(grepl("Elevator", data.sub$amenities)==T)] = 1
data.sub$tv = 0
data.sub$tv[which((grepl("TV", data.sub$amenities)==T) | (grepl("Cable TV", data.sub$amenities)==T))] = 1
data.sub$gym = 0
data.sub$gym[which(grepl("Gym", data.sub$amenities)==T)] = 1
data.sub$washer = 0
data.sub$washer[which(grepl("Washer", data.sub$amenities)==T)] = 1
data.sub$dryer = 0
data.sub$dryer[which(grepl("Dryer", data.sub$amenities)==T)] = 1
data.sub$fridge = 0
data.sub$fridge[which(grepl("Refrigerator", data.sub$amenities)==T)] = 1
data.sub$self_check = 0
data.sub$self_check[which(grepl("Self check-in", data.sub$amenities)==T)] = 1
data.sub$hair = 0
data.sub$hair[which(grepl("Hair dryer", data.sub$amenities)==T)] = 1
data.sub$smart = 0
data.sub$smart[which(grepl("Smart lock", data.sub$amenities)==T)] = 1
data.sub$aid = 0
data.sub$aid[which(grepl("First aid kit", data.sub$amenities)==T)] = 1
data.sub$hanger = 0
data.sub$hanger[which(grepl("Hangers", data.sub$amenities)==T)] = 1
data.sub$co = 0
data.sub$co[which(grepl("Carbon monoxide detector", data.sub$amenities)==T)] = 1
data.sub = data.sub[,c('price','cleaning_fee','beds','host_response_time',
'host_is_superhost','neighbourhood_Bronx','neighbourhood_Brooklyn',
'neighbourhood_Manhattan','neighbourhood_Queens','neighbourhood_Staten',
'latitude','longitude','room_apt','room_private','room_shared',
'accommodates','bathrooms','bedrooms','guests_included','transit','access',
'minimum_nights','calculated_host_listings_count','property_type',
'review_scores_rating','reviews_per_month','is_business_travel_ready',
'review_scores_cleanliness','review_scores_checkin','is_location_exact',
'review_scores_location','review_scores_value','cancellation_policy',
'availability_30','availability_60','availability_90','availability_365','bed_airbed',
'bed_couch','bed_futon','bed_sofa','bed_real','instant_bookable',
'wifi','heat','air','kitcken','shampoo','essential','tv','gym')]
#'washer','dryer','fridge','self_check','hair','smart','aid','hanger','co')]
write.csv(data.sub, 'cleaned_data.csv',row.names = F)
table(data.sub$gym)
data1 = read.csv('result_new features3.csv',stringsAsFactors = F)
data2 = read.csv('result_new features4.csv',stringsAsFactors = F)
data3 = read.csv('result_new features5.csv',stringsAsFactors = F)
data4 = read.csv('result_new features6.csv',stringsAsFactors = F)
data5 = read.csv('result_new features7.csv',stringsAsFactors = F)
data6 = read.csv('result2.csv',stringsAsFactors = F)
data1 = read.csv('result3.csv',stringsAsFactors = F)
data1 = read.csv('result_new features7-2.csv',stringsAsFactors = F)
score=c(53.64084,52.75962,52.99071,52.83629,52.84098,53.44047,52.76051,51.84845)
data1 = read.csv('result_new features7-2.csv',stringsAsFactors = F)
data1 = read.csv('result_new features8.csv',stringsAsFactors = F)
data1 = read.csv('result_new features3.csv',stringsAsFactors = F)
data2 = read.csv('result_new features4.csv',stringsAsFactors = F)
data3 = read.csv('result_new features5.csv',stringsAsFactors = F)
data4 = read.csv('result_new features6.csv',stringsAsFactors = F)
data5 = read.csv('result_new features7.csv',stringsAsFactors = F)
data6 = read.csv('result2.csv',stringsAsFactors = F)
data7 = read.csv('result3.csv',stringsAsFactors = F)
data8 = read.csv('result_new features8.csv',stringsAsFactors = F)
setwd("~/Library/Mobile Documents/com~apple~CloudDocs/2018Fall/Airbnb/average")
data1 = read.csv('result_new features3.csv',stringsAsFactors = F)
data2 = read.csv('result_new features4.csv',stringsAsFactors = F)
data3 = read.csv('result_new features5.csv',stringsAsFactors = F)
data4 = read.csv('result_new features6.csv',stringsAsFactors = F)
data5 = read.csv('result_new features7.csv',stringsAsFactors = F)
data6 = read.csv('result2.csv',stringsAsFactors = F)
data7 = read.csv('result3.csv',stringsAsFactors = F)
data8 = read.csv('result_new features8.csv',stringsAsFactors = F)
score=c(53.64084,52.75962,52.99071,52.83629,52.84098,53.44047,52.76051,51.84845)
pred = data1$price/score[1]+data2$price/score[2]+data3$price/score[3]+data4$price/score[4]+
data5$price/score[5]+data6$price/score[6]+data7$price/score[7]+data8$price/score[8]
pred
pred = (data1$price/score[1]+data2$price/score[2]+data3$price/score[3]+data4$price/score[4]+
data5$price/score[5]+data6$price/score[6]+data7$price/score[7]+data8$price/score[8])/(scpre[1]/1+scpre[2]/1+
scpre[3]/1+scpre[4]/1+
scpre[5]/1+scpre[6]/1+
scpre[7]/1+scpre[8]/1+)
pred = (data1$price/score[1]+data2$price/score[2]+data3$price/score[3]+data4$price/score[4]+
data5$price/score[5]+data6$price/score[6]+data7$price/score[7]+data8$price/score[8])/(scpre[1]/1+scpre[2]/1+
scpre[3]/1+scpre[4]/1+
scpre[5]/1+scpre[6]/1+
scpre[7]/1+scpre[8]/1)
pred = (data1$price/score[1]+data2$price/score[2]+data3$price/score[3]+data4$price/score[4]+
data5$price/score[5]+data6$price/score[6]+data7$price/score[7]+data8$price/score[8])/(score[1]/1+score[2]/1+
score[3]/1+score[4]/1+
score[5]/1+score[6]/1+
score[7]/1+score[8]/1)
pred
pred = (data1$price/score[1]+data2$price/score[2]+data3$price/score[3]+data4$price/score[4]+
data5$price/score[5]+data6$price/score[6]+data7$price/score[7]+data8$price/score[8])/(1/score[1]+1/score[2]+
1/score[3]+1/score[4]+
1/score[5]+1/score[6]+
1/score[7]+1/score[8])
pred
cbind(id = data1$id,price=pred)
write.csv('average1.csv',row.names = F))
write.csv('average1.csv',row.names = F)
write.csv(result,'average1.csv',row.names = F)
result = cbind(id = data1$id,price=pred)
write.csv(result,'average1.csv',row.names = F)
pred[1]
data8$price[1]
data1 = read.csv('result_new features3.csv',stringsAsFactors = F)
data2 = read.csv('result_new features4.csv',stringsAsFactors = F)
data3 = read.csv('result_new features5.csv',stringsAsFactors = F)
data4 = read.csv('result_new features6.csv',stringsAsFactors = F)
data5 = read.csv('result_new features7.csv',stringsAsFactors = F)
data6 = read.csv('result2.csv',stringsAsFactors = F)
data7 = read.csv('result3.csv',stringsAsFactors = F)
data8 = read.csv('result_new features8.csv',stringsAsFactors = F)
pred = (data1$price+data2$price+data3$price+data4$price+data5$price+data6$price+data7$price+data8$price+)
pred = (data1$price+data2$price+data3$price+data4$price+data5$price+data6$price+data7$price+data8$price)/8
result = cbind(id = data1$id,price=pred)
write.csv(result,'average2.csv',row.names = F)
